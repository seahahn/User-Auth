# Generated by Django 3.2.5 on 2022-03-26 11:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='func_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_idx', models.IntegerField()),
                ('func_code', models.CharField(max_length=255)),
                ('is_worked', models.IntegerField(default=0)),
                ('error_msg', models.TextField(default='')),
                ('start_time', models.DateTimeField(verbose_name='start time')),
                ('end_time', models.DateTimeField(verbose_name='end time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
            ],
            options={
                'db_table': 'func_log',
            },
        ),
        migrations.CreateModel(
            name='inactive_users',
            fields=[
                ('idx', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255)),
                ('pw', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255)),
                ('membership', models.IntegerField()),
                ('last_update', models.DateTimeField(verbose_name='last access')),
                ('created_at', models.DateTimeField(verbose_name='create time')),
                ('user_state', models.IntegerField(default=1)),
                ('inactivated_at', models.DateTimeField(auto_now_add=True, verbose_name='secession')),
            ],
            options={
                'db_table': 'inactive_users',
            },
        ),
        migrations.CreateModel(
            name='mail_confirm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('cert_number', models.CharField(max_length=6)),
                ('last_update', models.DateTimeField(auto_now_add=True, verbose_name='last update')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
            ],
            options={
                'db_table': 'mail_confirm',
            },
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('idx', models.AutoField(db_column='idx', primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255)),
                ('pw', models.CharField(max_length=255)),
                ('nickname', models.CharField(max_length=255)),
                ('profile_pic', models.CharField(default='', max_length=255)),
                ('membership', models.IntegerField(default=0)),
                ('last_update', models.DateTimeField(auto_now_add=True, verbose_name='last access')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='sign up')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='ml_project',
            fields=[
                ('idx', models.AutoField(db_column='idx', primary_key=True, serialize=False)),
                ('proj_name', models.CharField(max_length=255)),
                ('last_update', models.DateTimeField(auto_now_add=True, verbose_name='last update')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('user_idx', models.ForeignKey(db_column='user_idx', on_delete=django.db.models.deletion.CASCADE, to='userauth.users')),
            ],
            options={
                'db_table': 'ml_project',
            },
        ),
        migrations.CreateModel(
            name='ml_model',
            fields=[
                ('idx', models.AutoField(db_column='idx', primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=255)),
                ('model_url', models.CharField(default='', max_length=255)),
                ('last_update', models.DateTimeField(auto_now_add=True, verbose_name='last update')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('user_idx', models.ForeignKey(db_column='user_idx', on_delete=django.db.models.deletion.CASCADE, to='userauth.users')),
            ],
            options={
                'db_table': 'ml_model',
            },
        ),

        # -- ★ Trigger 생성하기
        # -- 5분 지난 인증 메일 발송 기록은 새로운 기록 들어올 때 자동 삭제시킴
        migrations.RunSQL('''CREATE FUNCTION delete_old_mail_confirm() RETURNS trigger
                LANGUAGE plpgsql
                AS $trigger_delete_old_mail_confirm$
            BEGIN
            DELETE FROM mail_confirm WHERE last_update < CURRENT_TIMESTAMP - INTERVAL '5 minutes';
            RETURN NULL;
            END;
            $trigger_delete_old_mail_confirm$;
            '''),

        migrations.RunSQL('''CREATE TRIGGER trigger_delete_old_mail_confirm
            AFTER INSERT ON mail_confirm
            EXECUTE PROCEDURE delete_old_mail_confirm();'''),



        # -- 인증 요청이 중복해서 들어오면 해당 데이터의 last_update를 갱신시킴
        migrations.RunSQL('''CREATE FUNCTION update_mail_confirm() RETURNS trigger
                LANGUAGE plpgsql
                AS $trigger_update_mail_confirm$
            BEGIN
            update mail_confirm set last_update=NOW() where email = new.email;
            RETURN NULL;
            END;
            $trigger_update_mail_confirm$;
            '''),

        migrations.RunSQL('''CREATE TRIGGER trigger_update_mail_confirm
            AFTER UPDATE ON mail_confirm for each row
            EXECUTE PROCEDURE update_mail_confirm();''')
    ]
